{
	"info": {
		"_postman_id": "00b74929-8fb8-4070-808d-1d42f5d77256",
		"name": "StudentApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40921881"
	},
	"item": [
		{
			"name": "Get all student data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is valid\", function () {\r",
							"    pm.expect([200, 201, 202]).to.include(pm.response.code);\r",
							"});\r",
							"pm.test(\"Status code text is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Response status is correct\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"pm.test(\"Validating multiple status codes\", function () {\r",
							"    pm.expect([200, 201]).to.include(pm.response.code);\r",
							"});\r",
							"pm.test(\"Header contains X-Powered-By\", function () {\r",
							"    pm.response.to.have.header(\"X-Powered-By\", \"tinyhttp\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});\r",
							"pm.test(\"JSON array contains expected values\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData.skills).to.include(\"Java\");\r",
							"});\r",
							"pm.test(\"JSON fields validation\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"name\");\r",
							"    pm.expect(jsonData).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"id\": { \"type\": \"string\" },\r",
							"        \"name\": { \"type\": \"string\" },\r",
							"        \"gender\": { \"type\": \"string\" },\r",
							"        \"age\": { \"type\": \"integer\" },\r",
							"        \"university\": { \"type\": \"string\" },\r",
							"        \"skills\": {\r",
							"            \"type\": \"array\",\r",
							"            \"items\": { \"type\": \"string\" }\r",
							"        }\r",
							"    },\r",
							"    \"required\": [\"id\", \"name\", \"gender\", \"age\", \"university\", \"skills\"]\r",
							"};\r",
							"\r",
							"pm.test(\"JSON schema validation\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/students/S1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students",
						"S1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fully Update the student data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is valid\", function () {\r",
							"    pm.expect([200, 201, 202]).to.include(pm.response.code);\r",
							"});\r",
							"pm.test(\"Status code text is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\r\n    \"id\": \"S2\",\r\n    \"name\": \"Anita\",\r\n    \"gender\": \"Female\",\r\n    \"age\": 21,\r\n    \"university\": \"NIT Jalandhar\",\r\n    \"skills\": [\r\n      \"Javascript\",\r\n      \"NodeJs\"\r\n    ]\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/students/S2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students",
						"S2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Adding a student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is valid\", function () {\r",
							"    pm.expect([200, 201, 202]).to.include(pm.response.code);\r",
							"});\r",
							"pm.test(\"Status code text is Created\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\r\n    \"id\": \"S7\",\r\n    \"name\": \"Aman Singh\",\r\n    \"gender\": \"Male\",\r\n    \"age\": 24,\r\n    \"university\": \"IIT Madras\",\r\n    \"skills\": [\r\n      \"Html\",\r\n      \"CSS\"\r\n    ]\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/students",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partially Update the student data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is valid\", function () {\r",
							"    pm.expect([200, 201, 202]).to.include(pm.response.code);\r",
							"});\r",
							"pm.test(\"Status code text is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\r\n    \"id\": \"S2\",\r\n    \"age\": 22\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/students/S2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students",
						"S2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deleting a student data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is valid\", function () {\r",
							"    pm.expect([200, 201, 202]).to.include(pm.response.code);\r",
							"});\r",
							"pm.test(\"Status code text is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/students/S7",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students",
						"S7"
					]
				}
			},
			"response": []
		}
	]
}